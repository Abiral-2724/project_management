// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  OWNER
  ADMIN
  EDITOR
  COMMENTER
  VIEWER
}

enum Priority {
  Low
  Medium
  High
}

enum userRole {
  Team_member
  Manager
  Director
  Executive
  Business_owner
  Freelancer
  Student
  Other
  Prefer_not_to_say
  NONE
}

model User {
  id             String            @id @default(uuid(7))
  fullname       String            @default("asana")
  email          String            @unique
  password       String
  profile        String            @default("https://plus.unsplash.com/premium_vector-1728553012443-3cf619e7579d?q=80&w=1480&auto=format&fit=crop&ixlib=rb-4.1.0&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D")
  isVerified     Boolean           @default(false)
  OTP            Int               @default(000000)
  myRole         userRole          @default(NONE)
  ownedProjects  Projects[]
  memberProjects Project_Members[]
  assignedTask   Project_Tasks[]
  filesUploaded ProjectFiles[]
  createdAt      DateTime          @default(now())
}

model Projects {
  id             String            @id @default(uuid(7))
  projectName    String            @db.Text
  description    String            @db.Text
  ownerId        String
  owner          User              @relation(fields: [ownerId], references: [id])
  projectMembers Project_Members[]
  tasks          Project_Tasks[]
  views          ProjectViews[]
  projectfiles ProjectFiles[]
  createdAt      DateTime          @default(now())
}

model Project_Members {
  id        String   @id @default(uuid(7))
  projectId String
  project   Projects @relation(fields: [projectId], references: [id])
  role      Role     @default(EDITOR)
  emailuser String
  user      User     @relation(fields: [emailuser], references: [email])
  joinedAt  DateTime @default(now())
}

model Project_Tasks {
  id             String             @id @default(uuid(7))
  title          String             @db.Text
  description    String             @db.Text
  status         String
  project_id     String
  project        Projects           @relation(fields: [project_id], references: [id])
  assignee_email String
  assignee       User               @relation(fields: [assignee_email], references: [email])
  mark_complete  Boolean            @default(false)
  subTasks       Project_SubTasks[]
  priority       Priority           @default(High)
  startDate      DateTime           @default(now())
  dueDate        DateTime           @default(now())
  relatedFiles   ProjectFiles[]
  createdAt      DateTime           @default(now())
}

model Project_SubTasks {
  id               String        @id @default(uuid(7))
  title            String        @db.Text
  description      String        @db.Text
  status           String
  priority         Priority      @default(High)
  project_Tasks_id String
  task_id          Project_Tasks @relation(fields: [project_Tasks_id], references: [id])
  assignee_email   String
  startDate        DateTime      @default(now())
  dueDate          DateTime      @default(now())
  mark_complete    Boolean       @default(false)
  createdAt        DateTime      @default(now())
}

model ProjectViews {
  id         String   @id @default(uuid(7))
  project_id String
  project    Projects @relation(fields: [project_id], references: [id])
  overview   Boolean  @default(false)
  Board      Boolean  @default(false)
  List       Boolean  @default(true)
  Timeline   Boolean  @default(false)
  Dashboard  Boolean  @default(false)
  Gantt      Boolean  @default(false)
  Calenar    Boolean  @default(false)
  Note       Boolean  @default(false)
  Workload   Boolean  @default(false)
  Files      Boolean  @default(false)
  Messages   Boolean  @default(false)
}

model ProjectFiles {
  id         String        @id @default(uuid(7))
  file       String
  project_id String
  projectid Projects @relation(fields: [project_id],references: [id])
  task_id    String
  taskid     Project_Tasks @relation(fields: [task_id], references: [id])
  uploader_id String
  uploaderid User @relation(fields: [uploader_id] ,references: [id])
  uploadedAt        DateTime      @default(now()) 
}
